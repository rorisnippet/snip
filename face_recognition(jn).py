# -*- coding: utf-8 -*-
"""Face_recognition(JN)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12DJoegpOQTkn4Bq3_HyUryWYRMID3yTK
"""

#only jupyter
import cv2
import numpy as np
import matplotlib.pyplot as plt
import os

def detect_faces(image_path):
    # Load the pre-trained face detection classifier
    cascade_path = os.path.join(cv2.data.haarcascades, 'haarcascade_frontalface_default.xml')
    face_cascade = cv2.CascadeClassifier(cascade_path)

    # Read and process the image
    img = cv2.imread(image_path)
    if img is None:
        raise ValueError(f"Could not read image at {image_path}")

    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces = face_cascade.detectMultiScale(
        gray,
        scaleFactor=1.1,
        minNeighbors=4,
        minSize=(30, 30)
    )

    # Draw rectangles around detected faces
    for (x, y, w, h) in faces:
        cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)

    return img, len(faces)

def display_image(image):
    # Convert BGR to RGB for matplotlib
    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

    plt.figure(figsize=(10, 8))
    plt.imshow(image_rgb)
    plt.axis('off')
    plt.show()

def process_with_user_input():
    # Get image path from user
    print("Please enter the path to your image:")
    image_path = input().strip()

    try:
        # Process and display the image
        detected_faces_image, num_faces = detect_faces(image_path)
        display_image(detected_faces_image)
        print(f"Number of faces detected: {num_faces}")
    except Exception as e:
        print(f"Error processing image: {str(e)}")

# Run in a Jupyter cell to process your image
process_with_user_input()